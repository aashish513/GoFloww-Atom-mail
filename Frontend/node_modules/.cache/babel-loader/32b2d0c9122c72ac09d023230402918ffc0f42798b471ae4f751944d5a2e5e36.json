{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"E:\\\\hackfest code\\\\Frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider(_ref) {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Simulate checking for a stored user on mount\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    if (storedUser) {\n      setCurrentUser(JSON.parse(storedUser));\n    }\n    setLoading(false);\n  }, []);\n\n  // Simulate login functionality\n  const login = (email, password) => {\n    // In a real app, this would make an API call\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (email && password) {\n          const user = {\n            email,\n            name: email.split(\"@\")[0]\n          };\n          setCurrentUser(user);\n          localStorage.setItem(\"user\", JSON.stringify(user));\n          resolve(user);\n        } else {\n          reject(new Error(\"Invalid credentials\"));\n        }\n      }, 1000);\n    });\n  };\n\n  // Simulate signup functionality\n  const signup = (email, password, name) => {\n    // In a real app, this would make an API call\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (email && password) {\n          const user = {\n            email,\n            name: name || email.split(\"@\")[0]\n          };\n          setCurrentUser(user);\n          localStorage.setItem(\"user\", JSON.stringify(user));\n          resolve(user);\n        } else {\n          reject(new Error(\"Invalid information\"));\n        }\n      }, 1000);\n    });\n  };\n\n  // Logout functionality\n  const logout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem(\"user\");\n  };\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 10\n  }, this);\n}\n_s2(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","AuthProvider","_ref","children","currentUser","setCurrentUser","loading","setLoading","storedUser","localStorage","getItem","JSON","parse","login","email","password","Promise","resolve","reject","setTimeout","user","name","split","setItem","stringify","Error","signup","logout","removeItem","value","Provider","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/hackfest code/Frontend/src/contexts/AuthContext.js"],"sourcesContent":["\"use client\"\n\nimport { createContext, useState, useContext, useEffect } from \"react\"\n\nconst AuthContext = createContext()\n\nexport function useAuth() {\n  return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(null)\n  const [loading, setLoading] = useState(true)\n\n  // Simulate checking for a stored user on mount\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\")\n    if (storedUser) {\n      setCurrentUser(JSON.parse(storedUser))\n    }\n    setLoading(false)\n  }, [])\n\n  // Simulate login functionality\n  const login = (email, password) => {\n    // In a real app, this would make an API call\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (email && password) {\n          const user = { email, name: email.split(\"@\")[0] }\n          setCurrentUser(user)\n          localStorage.setItem(\"user\", JSON.stringify(user))\n          resolve(user)\n        } else {\n          reject(new Error(\"Invalid credentials\"))\n        }\n      }, 1000)\n    })\n  }\n\n  // Simulate signup functionality\n  const signup = (email, password, name) => {\n    // In a real app, this would make an API call\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (email && password) {\n          const user = { email, name: name || email.split(\"@\")[0] }\n          setCurrentUser(user)\n          localStorage.setItem(\"user\", JSON.stringify(user))\n          resolve(user)\n        } else {\n          reject(new Error(\"Invalid information\"))\n        }\n      }, 1000)\n    })\n  }\n\n  // Logout functionality\n  const logout = () => {\n    setCurrentUser(null)\n    localStorage.removeItem(\"user\")\n  }\n\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    loading,\n  }\n\n  return <AuthContext.Provider value={value}>{!loading && children}</AuthContext.Provider>\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}